plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.owasp.dependencycheck' version '12.1.1'
}

group = 'hamburg.foo'
version = '1.0.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'org.apache.commons:commons-lang3:3.17.0'
	implementation 'com.github.ben-manes.caffeine:caffeine'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
	compileOnly 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-parameters'
}

tasks.named('test') {
	useJUnitPlatform()
}

dependencyCheck {
    nvd.apiKey = System.getenv("NVD_API_KEY")
}
